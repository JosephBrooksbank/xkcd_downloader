#!/usr/bin/python2.7

import argparse
import json
import os
import subprocess
import sys

import urllib.error

parser = argparse.ArgumentParser(description="download the latest xkcd")  # parser handles argument input
parser.add_argument("-v", "--verbose", action="store_true", help="Makes the output more verbose")  # adding arguments
parser.add_argument("-r", "--remove", action="store_true", help="Removes previous comic if specified")
parser.add_argument("-f", "--force", action="store_true", help="Forces download of new comic.")
args = parser.parse_args()
xkcd_dir = "/home/" + os.environ['USER'] + "/.xkcd_download"  # setting directory to store images
# TODO ask user for location on install
if not os.path.exists(xkcd_dir):  # creates folder to store all data
    os.mkdir(xkcd_dir)
    if args.verbose:
        print("creating directory " + xkcd_dir)
    os.mkdir(xkcd_dir + "/old_comics")  # creates location to store all old comics
    if args.verbose:
        print("creating directory " + xkcd_dir + "/old_comics")
if not os.path.exists(xkcd_dir + "/previous_comic.txt"):  # Creates text file to hold the name of the previous
    # across runs
    previous_comic = open(xkcd_dir + '/previous_comic.txt', 'w+')
    previous_comic.write('NULL')
    if args.verbose:
        print("no previous comic detected, creating file...")
    previous_comic.close()

url = "http://xkcd.com/info.0.json"  # URL for xkcd json file
try:
    xkcdJsonURL = urllib.request.urlopen(url)  # parses json file
except:
    print("no internet found")
    sys.exit()
data = json.loads(xkcdJsonURL.read())
safe_title = data['title'].replace(' ', '_').lower() + ".png"  # Converts the "title" data into what the image will be
# Labeled as
previous_comic = open(xkcd_dir + '/previous_comic.txt', 'r')
previous_comic_title = previous_comic.read()  # Gets the previous comic's title into a variable
previous_comic.close()

current_xkcd_comic = xkcd_dir + "/" + safe_title  # gets location of current comic
previous_xkcd_comic = xkcd_dir + "/" + previous_comic_title
if (previous_comic_title != safe_title) or args.force:  # downloads comic if new OR if told to do so
    if not previous_comic_title == "NULL":  # Checks for first-run
        if args.remove:
            subprocess.call(['rm', previous_xkcd_comic])  # Moves previous comic into old_comics or deletes it
        else:
            subprocess.call(['mv', previous_xkcd_comic, xkcd_dir + "/old_comics"])
    if args.verbose:
        subprocess.call(['wget', '-P', xkcd_dir, data['img']], )
    else:
        with open('/dev/null', 'w') as devnull:
            subprocess.call(['wget', '-P', xkcd_dir, data['img']], stdout=devnull, stderr=devnull)

    safe_alt = str(data["alt"]).replace("'", "'\\''")  # Sanitizes alt/title text
    (subprocess.call('convert ' + current_xkcd_comic + ' -background White -font Lucida-G -pointsize 10 label:\'' +
                     safe_alt + '\' -gravity Center -append ' + current_xkcd_comic, shell=True))  # Creates border
    previous_comic = open(xkcd_dir + '/previous_comic.txt', 'w')  # around comic,
    previous_comic.write(safe_title)  # writes alt text
    previous_comic.close()
else:
    print("Already got the comic!")
